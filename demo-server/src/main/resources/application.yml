server:
  port: 8080
  tomcat:
    accept-count: 50000
    max-connections: 2000
    connection-timeout: 2000
  compression:
    enabled: true

spring:
  main:
    # 删除打印SPRING BOOT旗帜
    banner-mode: off
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8
    default-property-inclusion: always
  datasource:
    username: root
    password: 123456
    url: jdbc:mysql://localhost:3306/demo?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai
    driver-class-name: com.mysql.cj.jdbc.Driver
    type: com.zaxxer.hikari.HikariDataSource
    # Hikari 连接池配置 ------ 详细配置请访问：https://github.com/brettwooldridge/HikariCP
    hikari:
      # 连接池最大连接数
      maximum-pool-size: 30
      # 最小空闲连接数
      minimum-idle: 5
      # 空闲连接最大存活时间
      idle-timeout: 600000
      # 控制从连接池返回的连接自动提交行为
      auto-commit: true
      # 数据库连接超时时间
      connection-timeout: 300000
      # 最大生存时间30分钟，每30分钟一次从连接池中移除死亡连接
      max-lifetime: 1800000
      # 连接测试
      connection-test-query: SELECT 1

mybatis:
  # 扫描mapper文件路径
  mapper-locations: classpath*:mapping/**/*Mapper.xml
  # mybatis配置载类别名包
  type-aliases-package: com.study.demo.model
  #
#  config-location: classpath*:mybatis-config.xml
  configuration:
    # 是否开启自动驼峰命名规则，开启后自动会将数据库的下划线命名方式转化为驼峰
    map-underscore-to-camel-case: true
    # 日志输出类
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

logging:
  config: classpath:log4j2.xml

#showSql
#logging:
#  level:
#    com:
#      example:

#
#        server.tomcat.max-connections = 2000
#        server.tomcat.accept-count = 50000
#        server.tomcat.max-threads = 100
#        server.connection-timeout = 2000
#        server.compression.enabled = true
#        spring.main.banner-mode = off
#        spring.jackson.date-format = yyyy-MM-dd HH:mm:ss
#        spring.jackson.time-zone = GMT+8
#        spring.jackson.default-property-inclusion = always
#        spring.redis.host = 10.5.0.178
#        spring.redis.port = 6379
#        spring.redis.password = 123456
#        spring.redis.database = 0
#        spring.redis.jedis.pool.max-active = 8
#        spring.redis.jedis.pool.max-idle = 8
#        spring.redis.jedis.pool.min-idle = 0
#        spring.cloud.loadbalancer.retry.enabled = true
#        spring.zipkin.sender.type = kafka
#        spring.zipkin.base-url = http://10.5.0.178:9003/
#        spring.kafka.bootstrap-servers = 192.168.161.216:9092
#        spring.datasource.url = jdbc:mysql://10.5.0.178:3306/fincloud_loan_contractseal?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai
#        spring.datasource.username = root
#        spring.datasource.password = 123456
#        spring.datasource.druid.driver-class-name = com.mysql.cj.jdbc.Driver
#        spring.datasource.druid.initial-size = 5
#        spring.datasource.druid.max-active = 30
#        spring.datasource.druid.min-idle = 5
#        spring.datasource.druid.max-wait = 60000
#        spring.datasource.druid.time-between-eviction-runs-millis = 60000
#        spring.datasource.druid.min-evictable-idle-time-millis = 300000
#        spring.datasource.druid.validation-query = SELECT 1 FROM DUAL
#        spring.datasource.druid.test-while-idle = true
#        spring.datasource.druid.test-on-borrow = false
#        spring.datasource.druid.test-on-return = false
#        spring.datasource.druid.pool-prepared-statements = true
#        spring.datasource.druid.max-pool-prepared-statement-per-connection-size = 50
#        spring.datasource.druid.filter = stat,wall
#        spring.datasource.druid.connection-properties = druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500
#        spring.datasource.druid.use-global-data-source-stat = true
#        spring.sleuth.web.client.enabled = true
#        spring.sleuth.sampler.probability = 1.0
#        mybatis.configuration.map-underscore-to-camel-case = true
#        mybatis.configuration.log-impl = org.apache.ibatis.logging.stdout.StdOutImpl
#        mybatis.check-config-location = true
#        mybatis.mapper-locations = classpath*:mapper/**/*Mapper.xml
#        eureka.instance.lease-expiration-duration-in-seconds = 15
#        eureka.instance.lease-renewal-interval-in-seconds = 3
#        eureka.client.registry-fetch-interval-seconds = 3
#        eureka.client.register-with-eureka = true
#        eureka.client.service-url.defaultZone = http://admin:123@10.3.1.92:9000/eureka/
#        feign.hystrix.enabled = false
#        feign.okhttp.enabled = true
#        feign.compression.request.enabled = true
#        feign.compression.response.enabled = true
#        management.endpoints.web.exposure.include = hystrix.stream,health,info
#        rocketmq.name-server = 10.3.1.92:9876
#        rocketmq.producer.enable-msg-trace = true
#        rocketmq.producer.retry-next-server = true
#        rocketmq.producer.retry-times-when-send-async-failed = 2
#        rocketmq.producer.send-message-timeout = 3000
#        rocketmq.producer.group = fincloud-order
#        swagger2.enable = true
#        server.port = 9107
#        spring.application.name = fincloud-loan-contractseal-service
#        eureka.instance.prefer-ip-address = true
#        eureka.instance.instance-id = ${spring.cloud.client.ip-address}:${spring.application.name}:${server.port}
#        eureka.instance.hostname = ${spring.cloud.client.ip-address}
#        # feiclient 重名
#        spring.main.allow-bean-definition-overriding = true
#        ribbon.ReadTimeout = 60000
#        ribbon.ConnectTimeout = 60000
#        bullprepose.intf.ip = 123.56.1.253:9000
#        bullprepose.intf.url = http://${bullprepose.intf.ip}/fincloud/common.intf
#        bullprepose.intf.conTimeOut = 60000
#        bullprepose.intf.socetTimeOut = 60000
